{"version":3,"sources":["components/RecipeCard.js","pages/Home.js","redux/actions.js","components/Navigation.js","pages/Login.js","pages/Register.js","pages/UserRecipes.js","components/ModalComment.js","components/ModalReiew.js","pages/Recipe.js","pages/AddRecipe.js","components/FuzzySearch.js","components/SpoonSearch.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers.js","index.js"],"names":["RecipeCard","props","useState","rating","setRating","useEffect","fetch","id","then","res","json","data","Col","xs","sm","md","lg","xl","Card","Body","Title","title","Subtitle","className","username","isNaN","Text","snippet","to","link","Link","Home","recipes","setRecipes","Container","Jumbotron","fluid","Row","map","recipe","split","slice","join","User","SET_USER","setUser","type","Navigation","user","useSelector","state","history","useHistory","dispatch","useDispatch","setUserStatus","error","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Button","onClick","success","alert","push","Form","inline","Login","password","form","setForm","handleChange","e","target","name","value","onSubmit","preventDefault","method","headers","body","JSON","stringify","Group","controlId","Label","Control","placeholder","onChange","variant","Register","UserRecipes","ModalComment","show","setShow","useParams","text","setText","handleClose","Modal","onHide","size","Header","closeButton","as","rows","Footer","ModalReiew","score","Recipe","setRecipe","comments","setComments","UserId","comment","Alert","AddRecipe","console","log","FuzzySearch","searchResults","setSearchResults","results","Fuse","includeScore","keys","search","result","item","SpoonSearch","query","setQuery","setResults","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d622bb66.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Card, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst RecipeCard = (props) => {\n  const [ rating, setRating ] = useState('');\n\n  useEffect(() => {\n    fetch(`/api/v1/recipes/${props.id}/getrating`)\n    .then(res => res.json())\n    .then(data => {\n      setRating(data)\n    })\n  }, [])\n\n  return (\n      <Col xs={12} sm={6} md={4} lg={3} xl={3} key={props.id}>\n        <Card >\n          <Card.Body>\n            <Card.Title>{props.title}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              written by {props.username}\n            </Card.Subtitle>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              {isNaN(rating) ? 'no reviews yet' : `${rating} out of 5 rating`}\n            </Card.Subtitle>\n            <Card.Text>\n              {props.snippet}\n            </Card.Text>\n            <LinkContainer to={props.link} >\n                <Card.Link>link to recipe</Card.Link>\n            </LinkContainer>\n          </Card.Body>\n        </Card>\n      </Col>\n  )\n}\n\nexport default RecipeCard\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Jumbotron, Row } from \"react-bootstrap\";\nimport RecipeCard from \"../components/RecipeCard\";\n\nconst Home = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/v1/recipes\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRecipes(data);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Jumbotron fluid>\n        <Container>\n          <h1>Recipes</h1>\n          <p>\n            This page is a collection of the recipes that our users have posted - please explore and enjoy!\n          </p>\n        </Container>\n      </Jumbotron>\n      <Row>\n        {recipes.map((recipe) => {\n          const content = recipe.recipe.split(\"\");\n          const snippet = content.slice(0, 40);\n          snippet[40] = \"...\";\n          snippet.join(\"\");\n          return (\n            <RecipeCard title={recipe.title} username={recipe.User.username} snippet={snippet} link={`/recipes/${recipe.id}`} id={recipe.id}/>\n          );\n        })}\n      </Row>\n      \n    </Container>\n  );\n};\n\nexport default Home;\n","export const SET_USER = 'SET_USER';\n\nexport function setUser(data) {\n  return {\n    type: SET_USER,\n    data,\n  }\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  Navbar,\n  Form,\n  FormControl,\n  Button,\n  Nav,\n  Container\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { setUser } from \"../redux/actions\";\nimport {LinkContainer} from 'react-router-bootstrap'\n\nconst Navigation = () => {\n  const user = useSelector((state) => state.user);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [ userStatus, setUserStatus ] = useState('LOADING');\n\n  // logout function using api\n  const logout = () => {\n    fetch('/api/v1/users/logout')\n    .then(res => res.json())\n    .then(data => {\n      if (data.success) {\n        alert(data.success);\n        dispatch(setUser(null));\n        history.push('/login')\n      }\n    })\n  }\n\n  // checking to see if user logged in - if so, set up redux with user data so that page refreshes dont reset login status\n  useEffect(() => {\n    fetch('/api/v1/users/current')\n    .then(res => res.json())\n    .then(data => {\n      if (!data.error) {\n        dispatch(setUser(data))\n      }\n      setUserStatus('CHECKED')\n    })\n  }, [])\n  \n  return (\n    <Container>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>Reactive Recipes</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {user ? (\n              <>\n              <LinkContainer to=\"/\">\n                <Nav.Link>Home</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/userrecipes\">\n                <Nav.Link>Your Recipes</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/addrecipe\">\n                <Nav.Link>Add Recipe</Nav.Link>\n              </LinkContainer>\n              <Button onClick={logout}>Logout</Button>\n              </>\n            ) : (\n              <>\n              <LinkContainer to=\"/login\">\n                <Nav.Link>Login</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/register\">\n                <Nav.Link>Register</Nav.Link>\n              </LinkContainer>\n              </>\n            )}\n          </Nav>\n          <Form inline>\n            <LinkContainer to=\"/fuzzysearch\">\n              <Nav.Link>Search Our Database</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/spoonsearch\">\n              <Nav.Link>Search Spoonacular Database</Nav.Link>\n            </LinkContainer>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { setUser } from \"../redux/actions\";\n\nconst Login = () => {\n  const [ form, setForm ] = useState({\n    username: '',\n    password: ''\n  })\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('/api/v1/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: form.username,\n        password: form.password,\n      }),\n    })\n    .then((res) => res.json())\n    .then(data => {\n      if (data.error) {\n        alert(data.error)\n      } else {\n        alert('user logged in!');\n        dispatch(setUser(data))\n        history.push('/')\n      }\n    })\n  }\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter username\" name='username' onChange={handleChange}/>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" name='password' onChange={handleChange}/>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\n\nconst Register = () => {\n  const [ form, setForm ] = useState({\n    username: '',\n    password: ''\n  })\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('/api/v1/users/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: form.username,\n        password: form.password,\n      }),\n    })\n    .then((res) => res.json())\n    .then(data => {\n      if (data.error) {\n        alert(data.error)\n      } else {\n        alert('user registered!');\n        history.push('/login')\n      }\n    })\n  }\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    })\n  }\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter email\" name='username' onChange={handleChange}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={handleChange} name='password' />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Jumbotron, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport RecipeCard from \"../components/RecipeCard\";\n\nconst UserRecipes = () => {\n  const [recipes, setRecipes] = useState([]);\n  const user = useSelector((state) => state.user);\n\n  useEffect(() => {\n    fetch(\"/api/v1/recipes/userrecipes\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRecipes(data);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Jumbotron fluid>\n        <Container>\n          <h1>Your Recipes</h1>\n          <p>\n            This page is a collection of your recipes that you've submitted - thanks for contributing!\n          </p>\n        </Container>\n      </Jumbotron>\n      <Row>\n        {recipes.map((recipe) => {\n          const content = recipe.recipe.split(\"\");\n          const snippet = content.slice(0, 40);\n          snippet[40] = \"...\";\n          snippet.join(\"\");\n          return (\n            <RecipeCard\n              title={recipe.title}\n              snippet={snippet}\n              username={user.username}\n              id={recipe.id}\n              link={`/recipes/${recipe.id}`\n              }\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default UserRecipes;\n","import { Button, Container, Form, Modal } from 'react-bootstrap';\nimport React, { useState } from 'react'\nimport { useParams } from 'react-router';\n\nconst ModalComment = () => {\n  const [show, setShow] = useState(false);\n  const { id } = useParams();\n  const [ text, setText ] = useState('')\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n \n\n  const handleChange = (e) => {\n    setText(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`/api/v1/recipes/${id}/addcomment`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text: text\n      }),\n    })\n    .then((res) => res.json())\n    .then(data => {\n      if (data.error) {\n        alert(data.error)\n      } else {\n        alert('comment posted');\n        setText('')\n      }\n    })\n  }\n\n  return (\n    <>\n    <Button variant=\"primary\" onClick={handleShow}>\n      Add Comment\n    </Button>\n\n    <Modal show={show} onHide={handleClose} size='lg'>\n      <Modal.Header closeButton>\n        <Modal.Title>Comment</Modal.Title>\n      </Modal.Header>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Add Comment</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} name=\"text\" onChange={handleChange}/>\n          </Form.Group>\n          <Button type=\"submit\">Submit Comment</Button>\n        </Form>\n      </Container>\n      \n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  </>\n  )\n}\n\nexport default ModalComment\n","\nimport React, { useState } from 'react'\nimport { Container, Form, Button, Modal } from 'react-bootstrap';\nimport { useParams } from 'react-router';\n\nconst ModalReiew = () => {\n  const [show, setShow] = useState(false);\n  const { id } = useParams();\n  const [rating, setRating] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleChange = (e) => {\n    setRating(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`/api/v1/recipes/${id}/addrating`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        score: rating,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.error) {\n          alert(data.error);\n        } else {\n          alert(\"rating posted\");\n        }\n      });\n  };\n\n  return (\n    <>\n    <Button variant=\"primary\" onClick={handleShow}>\n      Add Review\n    </Button>\n\n    <Modal show={show} onHide={handleClose} size='lg'>\n      <Modal.Header closeButton>\n        <Modal.Title>What'd you think?</Modal.Title>\n      </Modal.Header>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Select your score 1-5</Form.Label>\n            <Form.Control as=\"select\" name=\"rating\" onChange={handleChange}>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Form.Control>\n          </Form.Group>\n          <Button type=\"submit\">Submit Review</Button>\n        </Form>\n      </Container>\n      \n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  </>\n  )\n}\n\nexport default ModalReiew\n","import React, { useEffect, useState } from \"react\";\nimport { Alert, Container, Jumbotron } from \"react-bootstrap\";\nimport { useParams } from \"react-router\";\nimport ModalComment from \"../components/ModalComment\";\nimport ModalReiew from \"../components/ModalReiew\";\nimport './Recipe.css'\n\nconst Recipe = () => {\n  const { id } = useParams();\n  const [recipe, setRecipe] = useState([]);\n  const [user, setUser] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [ rating, setRating ] = useState('')\n\n  // gets recipe data from backend\n  useEffect(() => {\n    fetch(`/api/v1/recipes/getrecipe/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setRecipe(data);\n      });\n  }, []);\n\n  // gets user infomation using userid attached to recipe\n  useEffect(() => {\n    fetch(`/api/v1/users/${recipe.UserId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setUser(data);\n      });\n  }, [recipe]);\n\n  useEffect(() => {\n    fetch(`/api/v1/recipes/${id}/getcomments`)\n      .then((res) => res.json())\n      .then((data) => {\n        setComments(data);\n      });\n  }, [recipe]);\n\n  useEffect(() => {\n    fetch(`/api/v1/recipes/${id}/getrating`)\n    .then(res => res.json())\n    .then(data => {\n      setRating(data)\n    })\n  }, [recipe])\n\n  return (\n    <Container>\n      <Jumbotron>\n        <h1>{recipe.title}</h1>\n        <p>written by {user.username}</p>\n        <p>{isNaN(rating) ? 'no reviews yet' : `${rating} out of 5 stars`}</p>\n        <p>\n          <ModalReiew /> {' '}\n          <ModalComment />\n        </p>\n      </Jumbotron>\n\n      {recipe.recipe}\n      {comments.map((comment) => {\n        return (\n          <Alert key={comment.id} variant=\"info\">\n            {comment.text}\n          </Alert>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Recipe;\n","import React, { useState } from \"react\";\nimport { Button, Container, Form, Jumbotron } from \"react-bootstrap\";\n\nconst AddRecipe = () => {\n  const [form, setForm] = useState({\n    title: \"\",\n    recipe: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    console.log(form);\n    e.preventDefault();\n    fetch(`/api/v1/recipes/create`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title: form.title,\n        recipe: form.recipe,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.error) {\n          alert(data.error);\n        } else {\n          alert(\"recipe posted\");\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <Container>\n      <Jumbotron fluid>\n        <Container>\n          <h1>Add Recipe</h1>\n          <p>\n            This page is for adding a recipe to our collection so that other users can find it and use it!\n          </p>\n        </Container>\n      </Jumbotron>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Recipe Title</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter title\"\n            onChange={handleChange}\n          />\n          <Form.Text className=\"text-muted\">Make it original!</Form.Text>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Recipe</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            name=\"recipe\"\n            rows={3}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Button type=\"submit\">Submit Recipe</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default AddRecipe;\n","import React, { useEffect, useState } from \"react\";\nimport Fuse from \"fuse.js\";\nimport { Container, Form, Jumbotron, Row } from \"react-bootstrap\";\nimport RecipeCard from \"./RecipeCard\";\n\nconst FuzzySearch = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api/v1/recipes\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRecipes(data);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setSearchResults(e.target.value);\n  };\n\n  const options = {\n    includeScore: true,\n    // Search in 'title' tags in array\n    keys: [\"title\"],\n  };\n\n  const fuse = new Fuse(recipes, options);\n\n  const results = fuse.search(searchResults);\n\n  return (\n    <Container>\n      <Jumbotron fluid>\n        <Container>\n          <Form>\n            <Form.Group>\n              <Form.Label><h2>What are you in the mood for?</h2></Form.Label>\n              <Form.Control\n                onChange={handleChange}\n                type=\"text\"\n                placeholder=\"name@example.com\"\n                name=\"search\"\n              />\n            </Form.Group>\n          </Form>\n        </Container>\n      </Jumbotron>\n      \n      <Row>\n        {results.map((result) => {\n          const content = result.item.recipe.split(\"\");\n          const snippet = content.slice(0, 40);\n          snippet[40] = \"...\";\n          snippet.join(\"\");\n          return (\n            <RecipeCard\n              title={result.item.title}\n              username={result.item.User.username}\n              snippet={snippet}\n              id={result.item.id}\n              link={`/recipes/${result.item.id}`}\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default FuzzySearch;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst SpoonSearch = () => {\n  const [query, setQuery] = useState(\"\");\n  const [ results, setResults ] = useState([]);\n  const [ renderResults, setRenderResults ] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(`https://api.spoonacular.com/recipes/complexSearch?apiKey=09e93e3b2c01481c8fd5db5eecd873fd&query=${query}&maxFat=25&number=2&addRecipeInformation=true`)\n  //   .then((res) => res.json())\n  //   .then((data) => {\n  //     setRenderResults(data);\n  //     console.log(renderResults)\n  //   });\n  // }, [results])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setResults(query)\n  }\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label>What are you in the mood for?</Form.Label>\n          <Form.Control\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"name@example.com\"\n            name=\"search\"\n          />\n        </Form.Group>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {/* <Row>\n        {results.map(result => {\n          const content = result.summary.split('');\n          const snippet = content.slice(0, 30).join('');\n          return (\n            <Col xs={12} sm={6} md={4} lg={3} xl={3} key={result.id}>\n              <Card>\n                <Card.Img variant=\"top\" src={result.image} />\n                <Card.Body>\n                  <Card.Title>{result.title}</Card.Title>\n                  <Card.Text>\n                    {snippet}\n                  </Card.Text>\n                  <LinkContainer to={`/recipes/${result.sourceUrl}`} >\n                      <Card.Link>link to recipe</Card.Link>\n                  </LinkContainer>\n                </Card.Body>\n              </Card>\n            </Col>\n          )\n        })}\n      </Row> */}\n    </Container>\n  );\n};\n\nexport default SpoonSearch;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"./components/Navigation\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport UserRecipes from \"./pages/UserRecipes\";\nimport Recipe from \"./pages/Recipe\";\nimport AddRecipe from \"./pages/AddRecipe\";\nimport FuzzySearch from \"./components/FuzzySearch\";\nimport SpoonSearch from \"./components/SpoonSearch\";\n\n//import ProtectedRoute from \"./components/ProtectedRoute\";\n\nfunction App() {\n  return (\n      <Router>\n          <Navigation />\n        <Switch>\n          <Route path='/' exact>\n            <Home />\n          </Route>\n          <Route path='/login'>\n            <Login />\n          </Route>\n          <Route path='/register'>\n            <Register />\n          </Route>\n          {/* takes user to page with only their recipes */}\n          <Route path='/userrecipes' exact>\n            <UserRecipes />\n          </Route>\n          <Route path='/recipes/:id'>\n            <Recipe />\n          </Route>\n          <Route path='/addrecipe'>\n            <AddRecipe />\n          </Route>\n          <Route path='/fuzzysearch'>\n            <FuzzySearch />\n          </Route>\n          <Route path='/spoonsearch'>\n            <SpoonSearch />\n          </Route>\n        </Switch>\n      </Router>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from 'redux'\nimport { userReducer } from './reducers'\n\nconst rootReducer = combineReducers({\n  user: userReducer\n})\n\nconst store = createStore(\n  rootReducer, \n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store;","import { SET_USER } from './actions'\n\nexport function userReducer(state = null, action) {\n  switch (action.type) {\n    case SET_USER:\n      return action.data\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}